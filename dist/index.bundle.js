(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>d});var t=e(537),a=e.n(t),o=e(645),i=e.n(o),A=e(667),c=e.n(A),s=new URL(e(744),e.b),l=i()(a());l.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;700&family=Playfair+Display&display=swap);"]);var p=c()(s);l.push([n.id,`:root{\n    --background: #14213d;\n    --title-text: #f1f1f1;\n    --p-text: #e5e5e5;\n    --primary: #fca311;\n    --black-text: #0f0f0f;\n}\n\n*{\n    margin: 0;\n    padding: 0;\n}\n\nbody{\n    font-family: 'Open Sans', sans-serif;\n    background: var(--background);\n    color: var(--p-text);\n\n    display: flex;\n    justify-content: center;\n    background: url(${p}) center/cover;\n    backdrop-filter: brightness(0.5);\n\n}\n\nh1{\n    font-family: 'Playfair Display', serif;\n}\n\nh1,h2,h3,h4,h5,h6{\n    color: var(--title-text);\n}\n\n#content{\n    width: 80%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n    backdrop-filter: blur(2px);\n}\n\n#tabs{\n    align-self: center;\n    margin: 2rem 2rem;\n    padding: 0.5rem 2.5rem;\n    border-bottom: var(--primary) 2px solid;\n    text-align: center;\n}\n\n#tabs button{\n    border: none;\n    background: none;\n    color: var(--title-text);\n    font-family: 'Playfair Display', serif;\n    font-size: 0.9rem;\n\n    padding: 0.5rem 1rem;\n    margin: 0 0.5rem;\n\n    transition: all 0.15s ease;\n}\n\n#tabs button:hover{\n    cursor: pointer;\n    transform: scale(1.08);\n    color: var(--primary);\n}\n\n#tabs button:active{\n    transform: scale(0.92);\n    color: var(--p-text);\n}\n\n.innercontent{\n    display: flex;\n    height: 100%;\n    justify-self: center;\n    justify-content: space-evenly;\n}\n\n.hero{\n    align-self: center;\n    text-align: center;\n    height: 55vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 4rem 0;\n}\n\n\n.hero h1{\n    font-size: 2.2rem;\n}\n\n.hero h2{\n    font-size: 1.3rem;\n    font-weight: 300;\n    margin-top: 0.5rem;\n}\n\n.cards{\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: 1fr; \n    align-items: center;\n\n    margin-bottom: 4rem;\n\n\n}\n\n.card{\n    height: auto;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n\n    backdrop-filter: blur(40px);\n    padding: 3rem 2rem;\n    margin: 0 1rem;\n}\n\n.card img{\n    width: 54px;\n    height: 64px;\n    margin-bottom: 2rem;\n}\n\n.card h3{\n    margin-bottom: 1rem;\n    text-align: center;\n    font-family: 'Playfair Display', serif;\n    color: var(--primary);\n    letter-spacing: 2px;\n}\n\n.location{\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    border-top: var(--primary) 2px solid;\n    border-bottom: var(--primary) 2px solid;\n    margin-bottom: 2rem;\n}\n\n.map{\n    border: 2px black solid;\n    margin: 1rem 2rem;\n}\n\n.adress{\n    text-align: right;\n    margin: 1rem 2rem;\n}\n\n@media (max-width: 1024px){\n    body{\n        backdrop-filter: blur(7px);\n    }\n\n    .cards{\n        display: grid;\n        grid-template-rows: repeat(3, 1fr);\n        grid-template-columns: 1fr; \n    }\n    .card{\n        margin-top: 0.5rem;\n    }\n\n    .location{\n        flex-direction: column;\n    }\n\n    .adress{\n        text-align: center;\n    }\n}`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,qBAAqB;IACrB,qBAAqB;IACrB,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,oCAAoC;IACpC,6BAA6B;IAC7B,oBAAoB;;IAEpB,aAAa;IACb,uBAAuB;IACvB,gEAAyD;IACzD,gCAAgC;;AAEpC;;AAEA;IACI,sCAAsC;AAC1C;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,8BAA8B;;IAE9B,0BAA0B;AAC9B;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;IACtB,uCAAuC;IACvC,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,gBAAgB;IAChB,wBAAwB;IACxB,sCAAsC;IACtC,iBAAiB;;IAEjB,oBAAoB;IACpB,gBAAgB;;IAEhB,0BAA0B;AAC9B;;AAEA;IACI,eAAe;IACf,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;IACtB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,oBAAoB;IACpB,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,cAAc;AAClB;;;AAGA;IACI,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,uBAAuB;IACvB,mBAAmB;;IAEnB,mBAAmB;;;AAGvB;;AAEA;IACI,YAAY;;IAEZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;;IAE9B,2BAA2B;IAC3B,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,sCAAsC;IACtC,qBAAqB;IACrB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;;IAE9B,oCAAoC;IACpC,uCAAuC;IACvC,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;IACvB,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,iBAAiB;AACrB;;AAEA;IACI;QACI,0BAA0B;IAC9B;;IAEA;QACI,aAAa;QACb,kCAAkC;QAClC,0BAA0B;IAC9B;IACA;QACI,kBAAkB;IACtB;;IAEA;QACI,sBAAsB;IAC1B;;IAEA;QACI,kBAAkB;IACtB;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;700&family=Playfair+Display&display=swap');\r\n\r\n:root{\r\n    --background: #14213d;\r\n    --title-text: #f1f1f1;\r\n    --p-text: #e5e5e5;\r\n    --primary: #fca311;\r\n    --black-text: #0f0f0f;\r\n}\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody{\r\n    font-family: 'Open Sans', sans-serif;\r\n    background: var(--background);\r\n    color: var(--p-text);\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    background: url(./title-bg-transformed.jpeg) center/cover;\r\n    backdrop-filter: brightness(0.5);\r\n\r\n}\r\n\r\nh1{\r\n    font-family: 'Playfair Display', serif;\r\n}\r\n\r\nh1,h2,h3,h4,h5,h6{\r\n    color: var(--title-text);\r\n}\r\n\r\n#content{\r\n    width: 80%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    backdrop-filter: blur(2px);\r\n}\r\n\r\n#tabs{\r\n    align-self: center;\r\n    margin: 2rem 2rem;\r\n    padding: 0.5rem 2.5rem;\r\n    border-bottom: var(--primary) 2px solid;\r\n    text-align: center;\r\n}\r\n\r\n#tabs button{\r\n    border: none;\r\n    background: none;\r\n    color: var(--title-text);\r\n    font-family: 'Playfair Display', serif;\r\n    font-size: 0.9rem;\r\n\r\n    padding: 0.5rem 1rem;\r\n    margin: 0 0.5rem;\r\n\r\n    transition: all 0.15s ease;\r\n}\r\n\r\n#tabs button:hover{\r\n    cursor: pointer;\r\n    transform: scale(1.08);\r\n    color: var(--primary);\r\n}\r\n\r\n#tabs button:active{\r\n    transform: scale(0.92);\r\n    color: var(--p-text);\r\n}\r\n\r\n.innercontent{\r\n    display: flex;\r\n    height: 100%;\r\n    justify-self: center;\r\n    justify-content: space-evenly;\r\n}\r\n\r\n.hero{\r\n    align-self: center;\r\n    text-align: center;\r\n    height: 55vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    margin: 4rem 0;\r\n}\r\n\r\n\r\n.hero h1{\r\n    font-size: 2.2rem;\r\n}\r\n\r\n.hero h2{\r\n    font-size: 1.3rem;\r\n    font-weight: 300;\r\n    margin-top: 0.5rem;\r\n}\r\n\r\n.cards{\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: 1fr; \r\n    align-items: center;\r\n\r\n    margin-bottom: 4rem;\r\n\r\n\r\n}\r\n\r\n.card{\r\n    height: auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    backdrop-filter: blur(40px);\r\n    padding: 3rem 2rem;\r\n    margin: 0 1rem;\r\n}\r\n\r\n.card img{\r\n    width: 54px;\r\n    height: 64px;\r\n    margin-bottom: 2rem;\r\n}\r\n\r\n.card h3{\r\n    margin-bottom: 1rem;\r\n    text-align: center;\r\n    font-family: 'Playfair Display', serif;\r\n    color: var(--primary);\r\n    letter-spacing: 2px;\r\n}\r\n\r\n.location{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    border-top: var(--primary) 2px solid;\r\n    border-bottom: var(--primary) 2px solid;\r\n    margin-bottom: 2rem;\r\n}\r\n\r\n.map{\r\n    border: 2px black solid;\r\n    margin: 1rem 2rem;\r\n}\r\n\r\n.adress{\r\n    text-align: right;\r\n    margin: 1rem 2rem;\r\n}\r\n\r\n@media (max-width: 1024px){\r\n    body{\r\n        backdrop-filter: blur(7px);\r\n    }\r\n\r\n    .cards{\r\n        display: grid;\r\n        grid-template-rows: repeat(3, 1fr);\r\n        grid-template-columns: 1fr; \r\n    }\r\n    .card{\r\n        margin-top: 0.5rem;\r\n    }\r\n\r\n    .location{\r\n        flex-direction: column;\r\n    }\r\n\r\n    .adress{\r\n        text-align: center;\r\n    }\r\n}"],sourceRoot:""}]);const d=l},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),r.push(l))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var o={},i=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],l=o[s]||0,p="".concat(s," ").concat(l);o[s]=l+1;var d=e(p),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)r[d].references++,r[d].updater(m);else{var u=a(m,t);t.byIndex=A,r.splice(A,0,{identifier:p,updater:u,references:1})}i.push(p)}return i}function a(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=e(o[i]);r[A].references--}for(var c=t(n,a),s=0;s<o.length;s++){var l=e(o[s]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}o=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,a&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},774:(n,r,e)=>{e(725),e.p,e.p},725:(n,r,e)=>{n.exports=e.p+"5faf80f410f6c19e4127.svg"},744:(n,r,e)=>{n.exports=e.p+"0219c722d95e2b4d54b1.jpeg"}},r={};function e(t){var a=r[t];if(void 0!==a)return a.exports;var o=r[t]={id:t,exports:{}};return n[t](o,o.exports,e),o.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");if(t.length)for(var a=t.length-1;a>-1&&!n;)n=t[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),a=e.n(t),o=e(569),i=e.n(o),A=e(565),c=e.n(A),s=e(216),l=e.n(s),p=e(589),d=e.n(p),m=e(426),u={};u.styleTagTransform=d(),u.setAttributes=c(),u.insert=i().bind(null,"head"),u.domAPI=a(),u.insertStyleElement=l(),r()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals,e(774);var f=e(725);const B=document.querySelector("#content");!function(){const n=document.createElement("div"),r=document.createElement("button"),e=document.createElement("button"),t=document.createElement("button");n.id="tabs",r.textContent="Home",e.textContent="Menu",t.textContent="Contact",r.id="home",e.id="menu",t.id="Contact",n.appendChild(r),n.appendChild(e),n.appendChild(t),B.appendChild(n)}(),function(){const n=document.createElement("div");n.classList.add("inner-content"),B.appendChild(n)}(),function(){const n=document.createElement("h1");n.textContent="Our Menu",n.style.textAlign="center";const r=document.createElement("div");r.classList.add("menu-cards"),r.appendChild(function(n,r,e,t){const a=document.createElement("div");a.classList.add("menu-card");const o=new Image;o.src=n,o.classList.add("block-img");const i=document.createElement("div"),A=document.createElement("h3");A.textContent="Pizza Pizzası";const c=document.createElement("p");c.textContent="Bu pizza pizzalı bir pizzadır";const s=document.createElement("h4");return s.textContent="25$",i.appendChild(A),i.appendChild(c),i.appendChild(s),a.appendChild(o),a.appendChild(i),a}(f));const e=document.querySelector(".inner-content");e.appendChild(n),e.appendChild(r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,